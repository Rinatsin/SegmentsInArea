<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkButtonRect.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAHnRFWHRUaXRsZQBTZWxlY3Q7
        U2VsZWN0QWxsO1NxdWFyZTtivK59AAAAxklEQVRYR+2UUQ4CIQxE94JeynAob1eZZktkGOOHdfGjHw9C
        22EmZPUws6340lozYhoS/ZQZ1F4b2AchOvuSL2d66d8CxOAVcAAnmrf7w35B3A/Cbxy2BmCUOAP2AUsB
        KHEG7AN86c8xfYRKnEHcD+CJvQJUgDg40VTiDOJ+EH7jsDUAo8QZsA9YCkCJM2Af4Et/jvoVVID6I9ob
        gFHiDNgHLAWgxBmwD/ClP8f0EV4BPLGPQwUglmHBx5mz/nYGtemS67HjCZ7rh8e9TjmpAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="checkButtonLine.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABKAAAAsgAAAOwAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAOwAAACyAAAASgAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAApwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAApwAAAAcAAAAAAAAAAAAAAKcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAApwAAAAAAAABKAAAA/wAAAP8AAAD/AAAA/wAAAN8AAABzAAAAPAAA
        ADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAA
        ADIAAAA8AAAAcwAAAN8AAAD/AAAA/wAAAP8AAAD/AAAASgAAALIAAAD/AAAA/wAAAP8AAACzAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAALMAAAD/AAAA/wAAAP8AAACyAAAA6wAAAP8AAAD/AAAA3wAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAN8AAAD/AAAA/wAAAOwAAAD9AAAA/wAA
        AP8AAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAP8AAAD/AAAA/QAA
        AP8AAAD/AAAA/wAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAALUAAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAhAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAP4AAAD/AAAA/wAAAP8AAADRAAAAFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAADyAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA2gAAAP8AAAD/AAAA2gAA
        ANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAAAAAAAAAAAAAgAAALUAAAD/AAAA/wAA
        APIAAAArAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIQAAAD5AAAA/wAAAP8AAAD/AAAAfwAAAAAAAACEAAAA/wAA
        AP8AAAD9AAAAUgAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAA
        AAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAFEAAAD5AAAA/wAAAP8AAAD/AAAArQAA
        AP4AAAD/AAAA/wAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAA
        AAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAyAAAAAAAAAFEAAAD5AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAC1AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAA
        AP8AAADRAAAAFAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADIAAAAAAAAAAAAA
        AFEAAAD5AAAA/wAAAP8AAAD/AAAA2gAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAA
        ANEAAAD/AAAA/wAAAL8AAAAwAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAA
        AAAAAAAAAAAAAAAAAFEAAAD5AAAA/wAAAPIAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAAKAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAyAAAAAAAAAAAAAAAAAAAAAAAAAFEAAAD4AAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAPAAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA/wAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABzAAAA/wAAAP8AAAD9AAAA6wAAAP8AAAD/AAAA3wAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAN8AAAD/AAAA/wAAAOwAAACyAAAA/wAAAP8AAAD/AAAAswAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAACzAAAA/wAAAP8AAAD/AAAAsgAAAEoAAAD/AAAA/wAA
        AP8AAAD/AAAA3wAAAHMAAAA8AAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAA
        ADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADwAAABzAAAA3wAAAP8AAAD/AAAA/wAAAP8AAABKAAAAAAAA
        AKYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAApwAA
        AAAAAAAAAAAABwAAAKYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKcAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAEoAAACyAAAA6wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA6wAA
        ALIAAABKAAAAAAAAAAAAAAAA4AAAB4AAAAGAAAABAAAAAAP//8AH///gD///8A////AP///wD/5/8A/8
        P/AP/B/wB/gP8APwB/AB4APwAMAB8ABBgPAAA8BwCAPgMAwH8DAOD/jwDx//8A+///AP///wD///8A//
        //AH///gA///wAAAAACAAAABgAAAAeAAAAc=
</value>
  </data>
</root>