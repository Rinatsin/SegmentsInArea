<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_rect.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAedEVYdFRpdGxlAFNlbGVjdDtTZWxlY3RBbGw7U3F1
        YXJlO2K8rn0AAADGSURBVFhH7ZRRDgIhDET3gl7KcChvV5lmS2QY44d18aMfD0LbYSZk9TCzrfjSWjNi
        GhL9lBnUXhvYByE6+5IvZ3rp3wLE4BVwACeat/vDfkHcD8JvHLYGYJQ4A/YBSwEocQbsA3zpzzF9hEqc
        QdwP4Im9AlSAODjRVOIM4n4QfuOwNQCjxBmwD1gKQIkzYB/gS3+O+hVUgPoj2huAUeIM2AcsBaDEGbAP
        8KU/x/QRXgE8sY9DBSCWYcHHmbP+dga16ZLrseMJnuuHx71OOakAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_line.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABKAAAAsgAAAOwAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAOwAAACyAAAASgAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAApwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAApwAAAAcAAAAAAAAAAAAAAKcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAApwAAAAAAAABKAAAA/wAAAP8AAAD/AAAA/wAAAN8AAABzAAAAPAAA
        ADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAA
        ADIAAAA8AAAAcwAAAN8AAAD/AAAA/wAAAP8AAAD/AAAASgAAALIAAAD/AAAA/wAAAP8AAACzAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAALMAAAD/AAAA/wAAAP8AAACyAAAA6wAAAP8AAAD/AAAA3wAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAN8AAAD/AAAA/wAAAOwAAAD9AAAA/wAA
        AP8AAABzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAP8AAAD/AAAA/QAA
        AP8AAAD/AAAA/wAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAALUAAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAhAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAP4AAAD/AAAA/wAAAP8AAADRAAAAFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAADyAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA2gAAAP8AAAD/AAAA2gAA
        ANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfwAAAAAAAAAAAAAAAgAAALUAAAD/AAAA/wAA
        APIAAAArAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIQAAAD5AAAA/wAAAP8AAAD/AAAAfwAAAAAAAACEAAAA/wAA
        AP8AAAD9AAAAUgAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAAAAAAAAAAAAAAAAAA
        AAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAFEAAAD5AAAA/wAAAP8AAAD/AAAArQAA
        AP4AAAD/AAAA/wAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAAAP8AAADRAAAAFAAA
        AAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAyAAAAAAAAAFEAAAD5AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAC1AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAANEAAAD/AAAA/wAA
        AP8AAADRAAAAFAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADIAAAAAAAAAAAAA
        AFEAAAD5AAAA/wAAAP8AAAD/AAAA2gAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAA
        ANEAAAD/AAAA/wAAAL8AAAAwAAAAAAAAAAAAAAAyAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAA
        AAAAAAAAAAAAAAAAAFEAAAD5AAAA/wAAAPIAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAAKAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAyAAAAAAAAAAAAAAAAAAAAAAAAAFEAAAD4AAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAPAAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA/wAAAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABzAAAA/wAAAP8AAAD9AAAA6wAAAP8AAAD/AAAA3wAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAN8AAAD/AAAA/wAAAOwAAACyAAAA/wAAAP8AAAD/AAAAswAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAACzAAAA/wAAAP8AAAD/AAAAsgAAAEoAAAD/AAAA/wAA
        AP8AAAD/AAAA3wAAAHMAAAA8AAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAA
        ADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADwAAABzAAAA3wAAAP8AAAD/AAAA/wAAAP8AAABKAAAAAAAA
        AKYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAApwAA
        AAAAAAAAAAAABwAAAKYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKcAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAEoAAACyAAAA6wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA6wAA
        ALIAAABKAAAAAAAAAAAAAAAA4AAAB4AAAAGAAAABAAAAAAP//8AH///gD///8A////AP///wD/5/8A/8
        P/AP/B/wB/gP8APwB/AB4APwAMAB8ABBgPAAA8BwCAPgMAwH8DAOD/jwDx//8A+///AP///wD///8A//
        //AH///gA///wAAAAACAAAABgAAAAeAAAAc=
</value>
  </data>
</root>